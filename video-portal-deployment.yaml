kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: video-portal-pv-claim
  labels:
    app: video-portal
spec:
  storageClassName: fastdata-hostpath
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-poral-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: video-poral
  template:
    metadata:
      labels:
        app: video-poral
    spec:
      containers:
      - name: video-poral
        image: docker.io/gulianglily/vod_portal_tidy-app:latest
        command: ["/bin/sh", "-c"]
        args:
        - "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: code-volume
          mountPath: /media
        - name: kubeconfig
          mountPath: /root/.kube/config
          subPath: config
          readOnly: true
        env:
          - name: MINIO_ENDPOINT
            value: "console.minio.mk8snode4.hhii.ampere"
          - name: MINIO_ACCESS_KEY
            value: "[ACCESS-KEY]"
          - name: MINIO_SECRET_KEY
            value: "[SECRET-key]"
          - name: MINIO_BUCKET_NAME
            value: "vpp-dst"
          - name: MINIO_SRC_BUCKET_NAME
            value: "vpp-src"
          - name: MINIO_DST_BUCKET_NAME
            value: "vpp-dst"
          - name: VOD_URL
            value: "[URL]"
          - name: DJANGO_ALLOWED_HOSTS
            value: "[hostname],[Host IP Address],127.0.0.1"
          - name: DB_NAME
            value: "postgres"
          - name: DB_USER
            value: "psql"
          - name: DB_PASSWORD
            value: "password"
          - name: DB_HOST
            value: "[Cluster IP]"
          - name: DB_PORT
            value: "5432"

      volumes:
        - name: code-volume
          persistentVolumeClaim:
            claimName: video-portal-app-pv-claim
        - name: kubeconfig
          configMap:
            defaultMode: 420
            name: kubeconfig-file
---
apiVersion: v1
kind: Service
metadata:
  name: video-portal-service
spec:
  selector:
    app: video-portal
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 32080
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: video-poral-ingress
spec:
  rules:
  - host: demo.mk8snode4.hhii.ampere
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: video-poral-service
            port:
              number: 8000
